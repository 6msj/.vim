!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
'	/Users/james/.vimrc	/^nnoremap ' `$/;"	m	language:Vim
;	/Users/james/.vimrc	/^noremap ; :$/;"	m	language:Vim
;	/Users/james/.vimrc	/^vnoremap ; :$/;"	m	language:Vim
<	/Users/james/.vimrc	/^vnoremap < <gv$/;"	m	language:Vim
<2-LeftMouse>	/Users/james/.vimrc	/^nnoremap <silent> <2-LeftMouse> :let @\/='\\V\\<'.escape(expand('<cword>'), '\\').'\\>'<cr>:set hls<cr>$/;"	m	language:Vim
<C-5>	/Users/james/.vimrc	/^nnoremap <C-5> :CtrlPCurWD<Cr>$/;"	m	language:Vim
<C-a>	/Users/james/.vimrc	/^inoremap <C-a> <nop>$/;"	m	language:Vim
<C-b>	/Users/james/.vimrc	/^nnoremap <C-b> :CtrlPBuffer<cr>$/;"	m	language:Vim
<C-c>	/Users/james/.vimrc	/^vnoremap <C-c> "+y$/;"	m	language:Vim
<C-g>	/Users/james/.vimrc	/^nnoremap <C-g> :CtrlPMRU<cr>$/;"	m	language:Vim
<C-h>	/Users/james/.vimrc	/^nnoremap <C-h> <C-W>h$/;"	m	language:Vim
<C-j>	/Users/james/.vimrc	/^nnoremap <C-j> <C-W>j$/;"	m	language:Vim
<C-k>	/Users/james/.vimrc	/^nnoremap <C-k> <C-W>k$/;"	m	language:Vim
<C-l>	/Users/james/.vimrc	/^nnoremap <C-l> <C-W>l$/;"	m	language:Vim
<C-t>	/Users/james/.vimrc	/^nnoremap <C-t> :CtrlP<cr>$/;"	m	language:Vim
<C-U>	/Users/james/.vimrc	/^inoremap <C-U> <C-G>u<C-U>$/;"	m	language:Vim
<C-v>	/Users/james/.vimrc	/^inoremap <C-v> <C-O>"0P$/;"	m	language:Vim
<C-\>	/Users/james/.vimrc	/^nnoremap <C-\\> :pop<cr>$/;"	m	language:Vim
<F2>	/Users/james/.vimrc	/^map <F2> za$/;"	m	language:Vim
<F2>	/Users/james/.vimrc	/^vnoremap <F2> zf$/;"	m	language:Vim
<F3>	/Users/james/.vimrc	/^map <F3> zR$/;"	m	language:Vim
<F4>	/Users/james/.vimrc	/^map <F4> zM$/;"	m	language:Vim
<F8>	/Users/james/.vimrc	/^nnoremap <F8> :GundoToggle<CR>$/;"	m	language:Vim
<F9>	/Users/james/.vimrc	/^map <F9> :sign unplace *<CR>$/;"	m	language:Vim
<Leader><space>	/Users/james/.vimrc	/^nnoremap <Leader><space> :noh<cr>$/;"	m	language:Vim
<Leader>=	/Users/james/.vimrc	/^nnoremap <Leader>= mzgg=G`z$/;"	m	language:Vim
<Leader>a"	/Users/james/.vimrc	/^nnoremap <Leader>a" :Tabularize \/"<CR>$/;"	m	language:Vim
<Leader>a"	/Users/james/.vimrc	/^vnoremap <Leader>a" :Tabularize \/"<CR>$/;"	m	language:Vim
<Leader>a:	/Users/james/.vimrc	/^nnoremap <Leader>a: :Tabularize \/:\\zs<CR>$/;"	m	language:Vim
<Leader>a:	/Users/james/.vimrc	/^vnoremap <Leader>a: :Tabularize \/:\\zs<CR>$/;"	m	language:Vim
<Leader>a=	/Users/james/.vimrc	/^nnoremap <Leader>a= :Tabularize \/=<CR>$/;"	m	language:Vim
<Leader>a=	/Users/james/.vimrc	/^vnoremap <Leader>a= :Tabularize \/=<CR>$/;"	m	language:Vim
<Leader>b	/Users/james/.vimrc	/^nnoremap <Leader>b :LustyBufferExplorer<cr>$/;"	m	language:Vim
<Leader>df	/Users/james/.vimrc	/^nnoremap <silent><Leader>df :call DiffToggle()<CR>$/;"	m	language:Vim
<Leader>dp	/Users/james/.vimrc	/^nnoremap <Leader>dp :!cp % ~\/Dropbox\/Public\/$/;"	m	language:Vim
<Leader>e	/Users/james/.vimrc	/^nnoremap <Leader>e :e <C-R>=expand("%:p:h") . "\/" <CR>$/;"	m	language:Vim
<Leader>f	/Users/james/.vimrc	/^nnoremap <Leader>f :LustyFilesystemExplorer<cr>$/;"	m	language:Vim
<Leader>jd	/Users/james/.vimrc	/^nnoremap <Leader>jd :YcmCompleter GoToDefinition<CR>$/;"	m	language:Vim
<Leader>je	/Users/james/.vimrc	/^nnoremap <Leader>je :YcmCompleter GoToDeclaration<CR>$/;"	m	language:Vim
<Leader>k	/Users/james/.vimrc	/^nnoremap <Leader>k :BD<CR>$/;"	m	language:Vim
<Leader>mc	/Users/james/.vimrc	/^nnoremap <Leader>mc :make <bar> :cw<cr>$/;"	m	language:Vim
<Leader>mk	/Users/james/.vimrc	/^nnoremap <Leader>mk :make %< <bar> :cw<cr>$/;"	m	language:Vim
<Leader>mm	/Users/james/.vimrc	/^nnoremap <Leader>mm :make %< <cr>$/;"	m	language:Vim
<Leader>mr	/Users/james/.vimrc	/^nnoremap <Leader>mr :!g++ % -o %< `sdl-config --cflags --libs` -lSDL_image -lSDL_ttf -lSDL_mixer && .\/%< <cr><cr>$/;"	m	language:Vim
<Leader>ms	/Users/james/.vimrc	/^nnoremap <Leader>ms :!g++ % -o %< `sdl-config --cflags --libs`$/;"	m	language:Vim
<Leader>n	/Users/james/.vimrc	/^nnoremap <Leader>n :NERDTreeToggle<cr>$/;"	m	language:Vim
<Leader>o	/Users/james/.vimrc	/^nnoremap <Leader>o *Ncgn$/;"	m	language:Vim
<Leader>Q	/Users/james/.vimrc	/^nnoremap <Leader>Q :so ~\/scratch.vim<cr>$/;"	m	language:Vim
<Leader>q	/Users/james/.vimrc	/^nnoremap <Leader>q <C-w><C-v><C-w>l :e ~\/scratch.vim<cr>$/;"	m	language:Vim
<Leader>r	/Users/james/.vimrc	/^nnoremap <Leader>r :'{,'}s\/<c-r>=expand('<cword>')<cr>\/$/;"	m	language:Vim
<Leader>s	/Users/james/.vimrc	/^nnoremap <Leader>s *N$/;"	m	language:Vim
<Leader>t	/Users/james/.vimrc	/^nnoremap <Leader>t :TagbarToggle<CR>$/;"	m	language:Vim
<Leader>v	/Users/james/.vimrc	/^nnoremap <Leader>v :e ~\/.vimrc<cr>$/;"	m	language:Vim
<Leader>V	/Users/james/.vimrc	/^nnoremap <Leader>V :silent! so $MYVIMRC<CR>$/;"	m	language:Vim
<Leader>v	/Users/james/.vimrc	/^vnoremap <Leader>v "_dP$/;"	m	language:Vim
<Leader>wh	/Users/james/.vimrc	/^nnoremap <Leader>wh :split<cr>$/;"	m	language:Vim
<Leader>wv	/Users/james/.vimrc	/^nnoremap <Leader>wv :vsplit<cr>$/;"	m	language:Vim
<Leader>x	/Users/james/.vimrc	/^nnoremap <Leader>x :call search('^'.matchstr(getline('.'),'^\\s*').'\\S','We')<CR>$/;"	m	language:Vim
<Leader>[	/Users/james/.vimrc	/^nnoremap<Leader>[ :pop<cr>$/;"	m	language:Vim
<Leader>]	/Users/james/.vimrc	/^nnoremap <Leader>] <C-]>$/;"	m	language:Vim
>	/Users/james/.vimrc	/^vnoremap > >gv$/;"	m	language:Vim
addNode	/Users/james/Developer/Python/BinaryTree.py	/^    def addNode(self, nodeToAdd, root):$/;"	m	language:Python	class:Tree
allBeds	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<Bed> allBeds = new Vector<Bed>();$/;"	f	language:Java	class:HospitalInit
allExamRooms	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<ExaminationRoom> allExamRooms = new Vector<ExaminationRoom>();$/;"	f	language:Java	class:HospitalInit
allHeads	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<Head> allHeads = new Vector<Head>();$/;"	f	language:Java	class:HospitalInit
allNurses	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<Nurse> allNurses = new Vector<Nurse>();$/;"	f	language:Java	class:HospitalInit
allOffices	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<Office> allOffices = new Vector<Office>();$/;"	f	language:Java	class:HospitalInit
allOperatingRooms	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<OperatingRoom> allOperatingRooms = new Vector<OperatingRoom>();$/;"	f	language:Java	class:HospitalInit
askThenLoad	/Users/james/play.cpp	/^void askThenLoad() {$/;"	f	language:C++
askThenLoad	/Users/james/play.cpp	/^void askThenLoad();$/;"	p	language:C++	file:
askThenRate	/Users/james/play.cpp	/^void askThenRate() {$/;"	f	language:C++
askThenRate	/Users/james/play.cpp	/^void askThenRate();$/;"	p	language:C++	file:
askThenSeek	/Users/james/play.cpp	/^void askThenSeek() {$/;"	f	language:C++
askThenSeek	/Users/james/play.cpp	/^void askThenSeek();$/;"	p	language:C++	file:
a_mutex	/Users/james/play.cpp	/^pthread_mutex_t a_mutex;$/;"	v	language:C++
background	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^SDL_Surface *background = NULL;$/;"	v	language:C++
background	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^SDL_Surface *background = NULL;$/;"	v	language:C++
batch_modify_before_lists	/Users/james/Developer/Python/puzzle_3.py	/^def batch_modify_before_lists(a_name, b_name, nodes_dict):$/;"	f	language:Python
build_beds	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void build_beds() {$/;"	m	language:Java	class:HospitalInit	file:
build_departments	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void build_departments() {$/;"	m	language:Java	class:HospitalInit	file:
build_exam_rooms	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void build_exam_rooms() {$/;"	m	language:Java	class:HospitalInit	file:
build_list	/Users/james/Developer/Python/puzzle_3.py	/^def build_list(nodes_dict, file_content):$/;"	f	language:Python
build_offices	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void build_offices() {$/;"	m	language:Java	class:HospitalInit	file:
build_operating_rooms	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void build_operating_rooms() {$/;"	m	language:Java	class:HospitalInit	file:
C	/Users/james/.vimrc	/^nnoremap C c\$$/;"	m	language:Vim
caveats	/usr/local/Library/Formula/emacs-mac.rb	/^  def caveats$/;"	f	language:Ruby	class:EmacsMac
caveats	/usr/local/Library/Formula/emacs.rb	/^  def caveats$/;"	f	language:Ruby	class:Emacs
changeFunction	/Users/james/play.cpp	/^void changeFunction() {$/;"	f	language:C++
changeFunction	/Users/james/play.cpp	/^void changeFunction();$/;"	p	language:C++	file:
checktime	/Users/james/.vimrc	/^augroup checktime$/;"	a	language:Vim
clean_up	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^void clean_up() {$/;"	f	language:C++
clean_up	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^void clean_up();$/;"	p	language:C++	file:
clean_up	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^void clean_up() {$/;"	f	language:C++
clean_up	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^void clean_up();$/;"	p	language:C++	file:
compilation_database_folder	/Users/james/.vim/.cpp/ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v	language:Python
controlOption	/Users/james/play.cpp	/^char controlOption; \/\/ variable control threads set$/;"	v	language:C++
currentlyPlaying	/Users/james/play.cpp	/^bool currentlyPlaying; \/\/ boolean value to determine player status$/;"	v	language:C++
currentlyThreading	/Users/james/play.cpp	/^bool currentlyThreading; \/\/ keyboard thread controls when other threads exit$/;"	v	language:C++
D	/Users/james/.vimrc	/^nnoremap D d\$$/;"	m	language:Vim
database	/Users/james/.vim/.cpp/ycm_extra_conf.py	/^  database = None$/;"	v	language:Python
database	/Users/james/.vim/.cpp/ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v	language:Python
determineSleep	/Users/james/play.cpp	/^int determineSleep() {$/;"	f	language:C++
determineSleep	/Users/james/play.cpp	/^int determineSleep();$/;"	p	language:C++	file:
DiffToggle	/Users/james/.vimrc	/^function! DiffToggle()$/;"	f	language:Vim
DirectoryOfThisScript	/Users/james/.vim/.cpp/ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f	language:Python
DisableMappings	/Users/james/.vimrc	/^augroup DisableMappings$/;"	a	language:Vim
do_not_install_ctags	/usr/local/Library/Formula/emacs.rb	/^  def do_not_install_ctags$/;"	f	language:Ruby	class:Emacs
Emacs	/usr/local/Library/Formula/emacs.rb	/^class Emacs < Formula$/;"	c	language:Ruby
EmacsMac	/usr/local/Library/Formula/emacs-mac.rb	/^class EmacsMac < Formula$/;"	c	language:Ruby
event	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^SDL_Event event;$/;"	v	language:C++
event	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^SDL_Event event;$/;"	v	language:C++
evil-motion-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-motion-state-map [f8] 'eval-last-sexp)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map ";" 'evil-ex)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map "H" 'evil-first-non-blank)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map "L" 'evil-end-of-line)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map "Y" 'copy-to-end-of-line)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map "\\C-h" 'windmove-left) ;; move left around split$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map "\\C-j" 'windmove-down) ;; move down a split$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map "\\C-k" 'windmove-up) ;; move up a split$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map "\\C-l" 'windmove-right) ;; move right around split$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map "\\C-p" 'ff-find-other-file) ;; open .h or .cpp$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map (kbd "C-u") 'keyboard-quit)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map [escape] 'keyboard-quit)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map [f2] 'hs-toggle-hiding)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map [f3] 'hs-show-all)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map [f4] 'hs-hide-all)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map [f5] 'gud-gdb)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map [f6] 'recompile)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map [f7] 'compile)$/;"	f	language:Lisp
evil-normal-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-normal-state-map [f8] 'eval-last-sexp)$/;"	f	language:Lisp
evil-visual-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-visual-state-map ";" 'evil-ex)$/;"	f	language:Lisp
evil-visual-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-visual-state-map "H" 'evil-first-non-blank)$/;"	f	language:Lisp
evil-visual-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-visual-state-map "L" 'evil-end-of-line)$/;"	f	language:Lisp
evil-visual-state-map	/Users/james/.emacs.d/init.el	/^(define-key evil-visual-state-map [escape] 'keyboard-quit)$/;"	f	language:Lisp
FindYouCompleteMeConf	/Users/james/.vimrc	/^function! FindYouCompleteMeConf()$/;"	f	language:Vim
find_top_most_required	/Users/james/Developer/Python/puzzle_3.py	/^def find_top_most_required(nodeA, nodeB):$/;"	f	language:Python
flags	/Users/james/.vim/.cpp/ycm_extra_conf.py	/^flags = [$/;"	v	language:Python
FlagsForFile	/Users/james/.vim/.cpp/ycm_extra_conf.py	/^def FlagsForFile( filename ):$/;"	f	language:Python
g:ctrlp_by_filename	/Users/james/.vimrc	/^let g:ctrlp_by_filename=0 " Emphasize directories in search.$/;"	v	language:Vim
g:ctrlp_cache_dir	/Users/james/.vimrc	/^let g:ctrlp_cache_dir = $HOME.'\/.vim\/.cache\/ctrlp'$/;"	v	language:Vim
g:ctrlp_clear_cache_on_exit	/Users/james/.vimrc	/^let g:ctrlp_clear_cache_on_exit = 0 " Share cache between sessions.$/;"	v	language:Vim
g:ctrlp_custom_ignore	/Users/james/.vimrc	/^let g:ctrlp_custom_ignore = '\\v[\\\/]\\.(git|hg|svn)$'$/;"	v	language:Vim
g:ctrlp_max_depth	/Users/james/.vimrc	/^let g:ctrlp_max_depth = 10 " How many levels to search through.$/;"	v	language:Vim
g:ctrlp_max_files	/Users/james/.vimrc	/^let g:ctrlp_max_files = 10000$/;"	v	language:Vim
g:ctrlp_mruf_max	/Users/james/.vimrc	/^let g:ctrlp_mruf_max = 30 " How many files to remember.$/;"	v	language:Vim
g:ctrlp_reuse_window	/Users/james/.vimrc	/^let g:ctrlp_reuse_window = 'netrw\\|help\\|quickfix'$/;"	v	language:Vim
g:ctrlp_use_caching	/Users/james/.vimrc	/^let g:ctrlp_use_caching=1 " Cache searches.$/;"	v	language:Vim
g:delimitMate_expand_cr	/Users/james/.vimrc	/^let g:delimitMate_expand_cr = 1$/;"	v	language:Vim
g:delimitMate_expand_space	/Users/james/.vimrc	/^let g:delimitMate_expand_space = 1$/;"	v	language:Vim
g:easytags_file	/Users/james/.vimrc	/^let g:easytags_file = '~\/.vim\/tags\/easytags'$/;"	v	language:Vim
g:easytags_include_members	/Users/james/.vimrc	/^let g:easytags_include_members = 1$/;"	v	language:Vim
g:easytags_python_enabled	/Users/james/.vimrc	/^let g:easytags_python_enabled = 1$/;"	v	language:Vim
g:EclimCompletionMethod	/Users/james/.vimrc	/^let g:EclimCompletionMethod = 'omnifunc'$/;"	v	language:Vim
g:EclimMenus	/Users/james/.vimrc	/^let g:EclimMenus = 1$/;"	v	language:Vim
g:gundo_close_on_revert	/Users/james/.vimrc	/^let g:gundo_close_on_revert=1   " close gundo when reverting$/;"	v	language:Vim
g:NERDChristmasTree	/Users/james/.vimrc	/^let g:NERDChristmasTree=1$/;"	v	language:Vim
g:NERDTreeAutoDeleteBuffer	/Users/james/.vimrc	/^let g:NERDTreeAutoDeleteBuffer=1$/;"	v	language:Vim
g:NERDTreeCasadeOpenSingleChildDir	/Users/james/.vimrc	/^let g:NERDTreeCasadeOpenSingleChildDir=1$/;"	v	language:Vim
g:NERDTreeDirArrows	/Users/james/.vimrc	/^let g:NERDTreeDirArrows=0$/;"	v	language:Vim
g:NERDTreeHighlightCursorline	/Users/james/.vimrc	/^let g:NERDTreeHighlightCursorline=1$/;"	v	language:Vim
g:NERDTreeHijackNetrw	/Users/james/.vimrc	/^let g:NERDTreeHijackNetrw = 1$/;"	v	language:Vim
g:NERDTreeMinimalUI	/Users/james/.vimrc	/^let g:NERDTreeMinimalUI=0$/;"	v	language:Vim
g:NERDTreeQuitOnOpen	/Users/james/.vimrc	/^let g:NERDTreeQuitOnOpen=1$/;"	v	language:Vim
g:NERDTreeShowBookmarks	/Users/james/.vimrc	/^let g:NERDTreeShowBookmarks=1$/;"	v	language:Vim
g:Powerline_symbols	/Users/james/.vimrc	/^let g:Powerline_symbols = 'fancy'$/;"	v	language:Vim
g:pymode_breakpoint	/Users/james/.vimrc	/^let g:pymode_breakpoint = 1 " Load breakpoints plugin.$/;"	v	language:Vim
g:pymode_breakpoint_key	/Users/james/.vimrc	/^let g:pymode_breakpoint_key = '<Leader>B' " Key for set\/unset breakpoint.$/;"	v	language:Vim
g:pymode_doc_key	/Users/james/.vimrc	/^let g:pymode_doc_key = '<Leader>K'$/;"	v	language:Vim
g:pymode_folding	/Users/james/.vimrc	/^let g:pymode_folding = 1$/;"	v	language:Vim
g:pymode_motion	/Users/james/.vimrc	/^let g:pymode_motion = 1$/;"	v	language:Vim
g:pymode_rope	/Users/james/.vimrc	/^let g:pymode_rope = 0 " Use Jedi instead of Rope.$/;"	v	language:Vim
g:pymode_run_key	/Users/james/.vimrc	/^let g:pymode_run_key = '<Leader>R'$/;"	v	language:Vim
g:rooter_use_lcd	/Users/james/.vimrc	/^let g:rooter_use_lcd = 1$/;"	v	language:Vim
g:ruby_path	/Users/james/.vimrc	/^ let g:ruby_path = join(split(glob($MY_RUBY_HOME.'\/lib\/ruby\/*.*')."\\n".glob($MY_RUBY_HOME.'\/lib\/rubysite_ruby\/*'),"\\n"),',')$/;"	v	language:Vim
g:syntastic_auto_jump	/Users/james/.vimrc	/^let g:syntastic_auto_jump            = 0 " jump to the first error on save$/;"	v	language:Vim
g:syntastic_auto_loc_list	/Users/james/.vimrc	/^let g:syntastic_auto_loc_list        = 2 " open and close automatically$/;"	v	language:Vim
g:syntastic_check_on_open	/Users/james/.vimrc	/^let g:syntastic_check_on_open        = 1 " run syntastic on open and save$/;"	v	language:Vim
g:syntastic_enable_balloons	/Users/james/.vimrc	/^let g:syntastic_enable_balloons      = 1 " display errors in tool tips$/;"	v	language:Vim
g:syntastic_enable_highlighting	/Users/james/.vimrc	/^let g:syntastic_enable_highlighting  = 1 " mark errors with syntax highlighting$/;"	v	language:Vim
g:syntastic_enable_signs	/Users/james/.vimrc	/^let g:syntastic_enable_signs         = 1 " errors to the left$/;"	v	language:Vim
g:syntastic_error_symbol	/Users/james/.vimrc	/^let g:syntastic_error_symbol         = "✗"$/;"	v	language:Vim
g:syntastic_mode_map	/Users/james/.vimrc	/^let g:syntastic_mode_map             = { 'passive_filetypes': ['java', 'cpp', 'c'] }$/;"	v	language:Vim
g:syntastic_style_error_symbol	/Users/james/.vimrc	/^let g:syntastic_style_error_symbol   = "s✗"$/;"	v	language:Vim
g:syntastic_style_warning_symbol	/Users/james/.vimrc	/^let g:syntastic_style_warning_symbol = "s⚠"$/;"	v	language:Vim
g:syntastic_warning_symbol	/Users/james/.vimrc	/^let g:syntastic_warning_symbol       = "⚠"$/;"	v	language:Vim
g:tagbar_compact	/Users/james/.vimrc	/^let g:tagbar_compact=1$/;"	v	language:Vim
g:tagbar_left	/Users/james/.vimrc	/^let g:tagbar_left=0$/;"	v	language:Vim
g:tagbar_singleclick	/Users/james/.vimrc	/^let g:tagbar_singleclick=1$/;"	v	language:Vim
g:tagbar_sort	/Users/james/.vimrc	/^let g:tagbar_sort=0$/;"	v	language:Vim
g:tagbar_width	/Users/james/.vimrc	/^let g:tagbar_width=30$/;"	v	language:Vim
g:UltiSnipsExpandTrigger	/Users/james/.vimrc	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v	language:Vim
g:UltiSnipsJumpForwardTrigger	/Users/james/.vimrc	/^let g:UltiSnipsJumpForwardTrigger="<tab>"$/;"	v	language:Vim
g:UltiSnipsSnippetDirectories	/Users/james/.vimrc	/^let g:UltiSnipsSnippetDirectories=["mysnippets","UltiSnips"]$/;"	v	language:Vim
g:UltiSnipsSnippetsDir	/Users/james/.vimrc	/^let g:UltiSnipsSnippetsDir="~\/.vim\/mysnippets"$/;"	v	language:Vim
g:user_zen_Leader_key	/Users/james/.vimrc	/^let g:user_zen_Leader_key = '<c-y>'$/;"	v	language:Vim
g:ycm_autoclose_preview_window_after_insertion	/Users/james/.vimrc	/^let g:ycm_autoclose_preview_window_after_insertion = 1$/;"	v	language:Vim
getKeys	/Users/james/play.cpp	/^void * getKeys(void *data) {$/;"	f	language:C++
getKeys	/Users/james/play.cpp	/^void * getKeys(void *data);$/;"	p	language:C++	file:
global-map	/Users/james/.emacs.d/init.el	/^(define-key global-map (kbd "RET") 'newline-and-indent) ;; autoindent$/;"	f	language:Lisp
H	/Users/james/.vimrc	/^map H ^$/;"	m	language:Vim
hire_heads	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void hire_heads() {$/;"	m	language:Java	class:HospitalInit	file:
hire_nurses	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void hire_nurses() {$/;"	m	language:Java	class:HospitalInit	file:
HospitalInit	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public HospitalInit() {$/;"	m	language:Java	class:HospitalInit
HospitalInit	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^public class HospitalInit {$/;"	c	language:Java
HospitalInit.allBeds	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<Bed> allBeds = new Vector<Bed>();$/;"	f	language:Java	class:HospitalInit
HospitalInit.allExamRooms	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<ExaminationRoom> allExamRooms = new Vector<ExaminationRoom>();$/;"	f	language:Java	class:HospitalInit
HospitalInit.allHeads	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<Head> allHeads = new Vector<Head>();$/;"	f	language:Java	class:HospitalInit
HospitalInit.allNurses	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<Nurse> allNurses = new Vector<Nurse>();$/;"	f	language:Java	class:HospitalInit
HospitalInit.allOffices	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<Office> allOffices = new Vector<Office>();$/;"	f	language:Java	class:HospitalInit
HospitalInit.allOperatingRooms	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public Vector<OperatingRoom> allOperatingRooms = new Vector<OperatingRoom>();$/;"	f	language:Java	class:HospitalInit
HospitalInit.build_beds	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void build_beds() {$/;"	m	language:Java	class:HospitalInit	file:
HospitalInit.build_departments	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void build_departments() {$/;"	m	language:Java	class:HospitalInit	file:
HospitalInit.build_exam_rooms	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void build_exam_rooms() {$/;"	m	language:Java	class:HospitalInit	file:
HospitalInit.build_offices	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void build_offices() {$/;"	m	language:Java	class:HospitalInit	file:
HospitalInit.build_operating_rooms	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void build_operating_rooms() {$/;"	m	language:Java	class:HospitalInit	file:
HospitalInit.hire_heads	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void hire_heads() {$/;"	m	language:Java	class:HospitalInit	file:
HospitalInit.hire_nurses	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    private void hire_nurses() {$/;"	m	language:Java	class:HospitalInit	file:
HospitalInit.HospitalInit	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^    public HospitalInit() {$/;"	m	language:Java	class:HospitalInit
imageManager	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^ImageManager *imageManager;$/;"	v	language:C++
imageManager	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^ImageManager *imageManager;$/;"	v	language:C++
in	/Users/james/play.cpp	/^std::ifstream in; \/\/ object to read from the file$/;"	v	language:C++
init_sdl	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^bool init_sdl() {$/;"	f	language:C++
init_sdl	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^bool init_sdl();$/;"	p	language:C++	file:
init_sdl	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^bool init_sdl() {$/;"	f	language:C++
init_sdl	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^bool init_sdl();$/;"	p	language:C++	file:
inorder	/Users/james/Developer/Python/BinaryTree.py	/^    def inorder(self, root):$/;"	m	language:Python	class:Tree
install	/usr/local/Library/Formula/emacs-mac.rb	/^  def install$/;"	f	language:Ruby	class:EmacsMac
install	/usr/local/Library/Formula/emacs.rb	/^  def install$/;"	f	language:Ruby	class:Emacs
iwb	/Users/james/.emacs.d/init.el	/^(defun iwb ()$/;"	f	language:Lisp
J	/Users/james/.vimrc	/^nnoremap J 10j$/;"	m	language:Vim
jk	/Users/james/.vimrc	/^imap jk <Esc>$/;"	m	language:Vim
K	/Users/james/.vimrc	/^nnoremap K 10k$/;"	m	language:Vim
L	/Users/james/.vimrc	/^map L \$$/;"	m	language:Vim
left	/Users/james/Developer/Python/BinaryTree.py	/^    left = None$/;"	v	language:Python	class:Node
LoadFile	/Users/james/play.cpp	/^void LoadFile(const char *filename) {$/;"	f	language:C++
LoadFile	/Users/james/play.cpp	/^void LoadFile(const char *filename);$/;"	p	language:C++	file:
loadWordsInDeque	/Users/james/play.cpp	/^void loadWordsInDeque() {$/;"	f	language:C++
loadWordsInDeque	/Users/james/play.cpp	/^void loadWordsInDeque();$/;"	p	language:C++	file:
load_image	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^SDL_Surface * load_image( std::string filename );$/;"	p	language:C++	file:
load_image	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^SDL_Surface *load_image( std::string filename ) {$/;"	f	language:C++
load_image	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^SDL_Surface * load_image( std::string filename );$/;"	p	language:C++	file:
load_image	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^SDL_Surface *load_image( std::string filename ) {$/;"	f	language:C++
main	/Users/james/a.cpp	/^int main() {$/;"	f	language:C++
main	/Users/james/Developer/C-Plus-Plus/IntExpo/BinaryTree.cpp	/^int main() {$/;"	f	language:C++
main	/Users/james/Developer/C-Plus-Plus/IntExpo/ReverseWords.c	/^int main() {$/;"	f	language:C
main	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^int main( int argc, char* args[] ) {$/;"	f	language:C++
main	/Users/james/Developer/Python/BinaryTree.py	/^def main():$/;"	f	language:Python
main	/Users/james/Developer/Python/puzzle_3.py	/^def main():$/;"	f	language:Python
main	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^int main( int argc, char* args[] ) {$/;"	f	language:C++
main	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/test.cpp	/^int main() {$/;"	f	language:C++
main	/Users/james/play.cpp	/^int main() {$/;"	f	language:C++
MakeRelativePathsInFlagsAbsolute	/Users/james/.vim/.cpp/ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f	language:Python
mapleader	/Users/james/.vimrc	/^let mapleader=","$/;"	v	language:Vim
message	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^SDL_Surface *message = NULL;$/;"	v	language:C++
message	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^SDL_Surface *message = NULL;$/;"	v	language:C++
minibuffer-local-completion-map	/Users/james/.emacs.d/init.el	/^(define-key minibuffer-local-completion-map [escape]$/;"	f	language:Lisp
minibuffer-local-isearch-map	/Users/james/.emacs.d/init.el	/^(define-key minibuffer-local-isearch-map [escape]$/;"	f	language:Lisp
minibuffer-local-map	/Users/james/.emacs.d/init.el	/^(define-key minibuffer-local-map [escape] 'minibuffer-keyboard-quit)$/;"	f	language:Lisp
minibuffer-local-must-match-map	/Users/james/.emacs.d/init.el	/^(define-key minibuffer-local-must-match-map [escape]$/;"	f	language:Lisp
minibuffer-local-ns-map	/Users/james/.emacs.d/init.el	/^(define-key minibuffer-local-ns-map [escape] 'minibuffer-keyboard-quit)$/;"	f	language:Lisp
modify_linked_list	/Users/james/Developer/Python/puzzle_3.py	/^def modify_linked_list(node_a_name, node_b_name,$/;"	f	language:Python
modify_node	/Users/james/Developer/Python/puzzle_3.py	/^def modify_node(a_name, b_name, nodes_dict):$/;"	f	language:Python
modify_nodes	/Users/james/Developer/Python/puzzle_3.py	/^def modify_nodes(nodes_dict, a_name, b_name, before):$/;"	f	language:Python
music	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^Mix_Music *music = NULL;$/;"	v	language:C++
music	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^Mix_Music *music = NULL;$/;"	v	language:C++
my-buffer-face-mode-fixed	/Users/james/.emacs.d/init.el	/^(defun my-buffer-face-mode-fixed ()$/;"	f	language:Lisp
my-buffer-face-mode-variable	/Users/james/.emacs.d/init.el	/^(defun my-buffer-face-mode-variable ()$/;"	f	language:Lisp
my-c-mode-cedet-hook	/Users/james/.emacs.d/init.el	/^(defun my-c-mode-cedet-hook ()$/;"	f	language:Lisp
my-semantic-hook	/Users/james/.emacs.d/init.el	/^(defun my-semantic-hook ()$/;"	f	language:Lisp
NeatFoldText	/Users/james/.vimrc	/^function! NeatFoldText() "{{{2$/;"	f	language:Vim
Node	/Users/james/Developer/Python/BinaryTree.py	/^class Node:$/;"	c	language:Python
Node	/Users/james/Developer/Python/puzzle_3.py	/^from Node import Node$/;"	i	language:Python
open_file	/Users/james/Developer/Python/puzzle_3.py	/^def open_file(filename):$/;"	f	language:Python
os	/Users/james/.vim/.cpp/ycm_extra_conf.py	/^import os$/;"	i	language:Python
out	/Users/james/play.cpp	/^std::ofstream out; \/\/ object to write to the file$/;"	v	language:C++
playbackRate	/Users/james/play.cpp	/^float playbackRate; \/\/ negative goes in reverse, positive forward$/;"	v	language:C++
playDeque	/Users/james/play.cpp	/^std::deque<word> playDeque; \/\/ play pops to rewind, reading forward$/;"	v	language:C++
playMedia	/Users/james/play.cpp	/^void * playMedia(void *data) {$/;"	f	language:C++
playMedia	/Users/james/play.cpp	/^void * playMedia(void *data);$/;"	p	language:C++	file:
playWordFromMedia	/Users/james/play.cpp	/^void playWordFromMedia(std::deque<word> &playFrom, std::deque<word> &addTo) {$/;"	f	language:C++
playWordFromMedia	/Users/james/play.cpp	/^void playWordFromMedia(std::deque<word> &playFrom, std::deque<word> &addTo);$/;"	p	language:C++	file:
postorder	/Users/james/Developer/Python/BinaryTree.py	/^    def postorder(self, root):$/;"	m	language:Python	class:Tree
preorder	/Users/james/Developer/Python/BinaryTree.py	/^    def preorder(self, root):$/;"	m	language:Python	class:Tree
PrepareClangFlags	/Users/james/.vim/.cpp/ycm_extra_conf.py	/^from clang_helpers import PrepareClangFlags$/;"	i	language:Python
program_CXX_OBJS	/Users/james/Developer/EBSideScroller/Project/makefile	/^program_CXX_OBJS := $(program_CXX_SRCS:.cpp=.o)$/;"	m	language:Make
program_CXX_SRCS	/Users/james/Developer/EBSideScroller/Project/makefile	/^program_CXX_SRCS := $(wildcard *.cpp)$/;"	m	language:Make
program_C_OBJS	/Users/james/Developer/EBSideScroller/Project/makefile	/^program_C_OBJS := $(program_C_SRCS:.c=.o)$/;"	m	language:Make
program_C_SRCS	/Users/james/Developer/EBSideScroller/Project/makefile	/^program_C_SRCS := $(wildcard *.c)$/;"	m	language:Make
program_INCLUDE_DIRS	/Users/james/Developer/EBSideScroller/Project/makefile	/^program_INCLUDE_DIRS := $/;"	m	language:Make
program_LIBRARIES	/Users/james/Developer/EBSideScroller/Project/makefile	/^program_LIBRARIES :=$/;"	m	language:Make
program_LIBRARY_DIRS	/Users/james/Developer/EBSideScroller/Project/makefile	/^program_LIBRARY_DIRS :=$/;"	m	language:Make
program_NAME	/Users/james/Developer/EBSideScroller/Project/makefile	/^program_NAME := main$/;"	m	language:Make
program_OBJS	/Users/james/Developer/EBSideScroller/Project/makefile	/^program_OBJS := $(program_C_OBJS) $(program_CXX_OBJS)$/;"	m	language:Make
Q	/Users/james/.vimrc	/^cmap Q :q!<cr>$/;"	m	language:Vim
Q	/Users/james/.vimrc	/^nnoremap Q gq$/;"	m	language:Vim
removeNode	/Users/james/Developer/Python/BinaryTree.py	/^    def removeNode(nodeToRemove):$/;"	m	language:Python	class:Tree
rename-current-buffer-file	/Users/james/.emacs.d/init.el	/^(defun rename-current-buffer-file ()$/;"	f	language:Lisp
reverseWords	/Users/james/Developer/C-Plus-Plus/IntExpo/ReverseWords.c	/^bool reverseWords( char str[] ) {$/;"	f	language:C
reverseWords	/Users/james/Developer/C-Plus-Plus/IntExpo/ReverseWords.c	/^bool reverseWords( char str[] );$/;"	p	language:C	file:
Rewind	/Users/james/play.cpp	/^void Rewind() {$/;"	f	language:C++
Rewind	/Users/james/play.cpp	/^void Rewind();$/;"	p	language:C++	file:
rewindDeque	/Users/james/play.cpp	/^std::deque<word> rewindDeque; \/\/ rewind inserts to play, reading backwards$/;"	v	language:C++
right	/Users/james/Developer/Python/BinaryTree.py	/^    right = None$/;"	v	language:Python	class:Node
root	/Users/james/Developer/Python/BinaryTree.py	/^    root = None$/;"	v	language:Python	class:Tree
rotate-windows	/Users/james/.emacs.d/init.el	/^(defun rotate-windows ()$/;"	f	language:Lisp
rotate-windows-helper	/Users/james/.emacs.d/init.el	/^(defun rotate-windows-helper(x d)$/;"	f	language:Lisp
screen	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^SDL_Surface *screen = NULL;$/;"	v	language:C++
screen	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^SDL_Surface *screen = NULL;$/;"	v	language:C++
SCREEN_BPP	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^const int SCREEN_BPP = 32;$/;"	v	language:C++
SCREEN_BPP	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^const int SCREEN_BPP = 32;$/;"	v	language:C++
SCREEN_HEIGHT	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^const int SCREEN_HEIGHT = 480;$/;"	v	language:C++
SCREEN_HEIGHT	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^const int SCREEN_HEIGHT = 480;$/;"	v	language:C++
SCREEN_WIDTH	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^const int SCREEN_WIDTH = 640;$/;"	v	language:C++
SCREEN_WIDTH	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^const int SCREEN_WIDTH = 640;$/;"	v	language:C++
SDLFLAGS	/Users/james/Developer/EBSideScroller/Project/makefile	/^SDLFLAGS := -lSDL -lSDL_image -lSDL_mixer$/;"	m	language:Make
SDLFLAGS	/Users/james/Developer/EBSideScroller/Project/makefile	/^SDLFLAGS := `sdl-config --cflags --libs` -lSDL_image -lSDL_ttf -lSDL_mixer$/;"	m	language:Make
SeekTo	/Users/james/play.cpp	/^void SeekTo(int byteoffset) {$/;"	f	language:C++
SeekTo	/Users/james/play.cpp	/^void SeekTo(int byteoffset);$/;"	p	language:C++	file:
SetRate	/Users/james/play.cpp	/^void SetRate(float rate) {$/;"	f	language:C++
SetRate	/Users/james/play.cpp	/^void SetRate(float rate);$/;"	p	language:C++	file:
shorten-directory	/Users/james/.emacs.d/init.el	/^(defun shorten-directory (dir max-length)$/;"	f	language:Lisp
soundManager	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^SoundManager *soundManager;$/;"	v	language:C++
soundManager	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^SoundManager *soundManager;$/;"	v	language:C++
splash	/Users/james/Developer/EBSideScroller/Project/main.cpp	/^SDL_Surface *splash = NULL;$/;"	v	language:C++
splash	/Users/james/Dropbox/Computer Science/EBSideScroller/Project/main.cpp	/^SDL_Surface *splash = NULL;$/;"	v	language:C++
Start	/Users/james/play.cpp	/^void Start() {$/;"	f	language:C++
Start	/Users/james/play.cpp	/^void Start();$/;"	p	language:C++	file:
startSometimes	/Users/james/play.cpp	/^void * startSometimes(void *data) {$/;"	f	language:C++
startSometimes	/Users/james/play.cpp	/^void * startSometimes(void *data);$/;"	p	language:C++	file:
Stop	/Users/james/play.cpp	/^void Stop() {$/;"	f	language:C++
Stop	/Users/james/play.cpp	/^void Stop();$/;"	p	language:C++	file:
stopSometimes	/Users/james/play.cpp	/^void * stopSometimes(void *data) {$/;"	f	language:C++
stopSometimes	/Users/james/play.cpp	/^void * stopSometimes(void *data);$/;"	p	language:C++	file:
t5_main	/Users/james/Dropbox/Computer Science/SE Project/Project Code/src/t5_main/HospitalInit.java	/^package t5_main;$/;"	p	language:Java
toggle-window-split	/Users/james/.emacs.d/init.el	/^(defun toggle-window-split ()$/;"	f	language:Lisp
togglePlayer	/Users/james/play.cpp	/^void togglePlayer() {$/;"	f	language:C++
togglePlayer	/Users/james/play.cpp	/^void togglePlayer();$/;"	p	language:C++	file:
Tree	/Users/james/Developer/Python/BinaryTree.py	/^class Tree:$/;"	c	language:Python
UltiSnips_Complete	/Users/james/.vimrc	/^function! g:UltiSnips_Complete()$/;"	f	language:Vim
UNAME	/Users/james/Developer/EBSideScroller/Project/makefile	/^UNAME := $(shell uname)$/;"	m	language:Make
UseMakeSameDirForC	/Users/james/.vimrc	/^function! UseMakeSameDirForC()$/;"	f	language:Vim
value	/Users/james/Developer/Python/BinaryTree.py	/^    value = 0$/;"	v	language:Python	class:Node
word	/Users/james/play.cpp	/^typedef std::string word;$/;"	t	language:C++	file:
x	/Users/james/.vimrc	/^nnoremap x "xx$/;"	m	language:Vim
x	/Users/james/.vimrc	/^vnoremap x "xx$/;"	m	language:Vim
XCodeBuild	/Users/james/.vimrc	/^function! XCodeBuild()$/;"	f	language:Vim
Y	/Users/james/.vimrc	/^nnoremap Y y\$$/;"	m	language:Vim
ycm_core	/Users/james/.vim/.cpp/ycm_extra_conf.py	/^import ycm_core$/;"	i	language:Python
__init__	/Users/james/Developer/Python/BinaryTree.py	/^    def __init__(self, rootval):$/;"	m	language:Python	class:Tree
__init__	/Users/james/Developer/Python/BinaryTree.py	/^    def __init__(self, value):$/;"	m	language:Python	class:Node
`	/Users/james/.vimrc	/^nnoremap ` '$/;"	m	language:Vim
